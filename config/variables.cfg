[save_variables]
filename: /home/pi/klipper_config/config/save_variables.cfg

[delayed_gcode _INIT]
initial_duration: 1
gcode:
  _USER_VARIABLES
  _CHECK_CONSITENT
  _EXECUTE_AT_INIT

[gcode_macro _EXECUTE_AT_INIT]
description: Helper: Everything that should run at klipper start
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLES'] %}
   {action_respond_info("Init done.")}

[gcode_macro _CHECK_CONSITENT]
description: Helper: Check that some criterias are meet in the printer.cfg
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLES'] %}
  {% set text = ["CONFIG: ERROR"] %}
  {% if user.verbose is not defined %}
    {% set _dummy = text.append("_USER_VARIABLES macro missing") %}
  {% elif not user.park.probe %}
    {% set _dummy = text.append("_USER_VARIABLES macro not executed") %}
  {% endif %}
  {% if user.park == {} %}
    {% set _dummy = text.append("[_USER_VARIABLES] park is empty \n") %}
  {% endif %}
  {% if 'save_variables' not in printer %}
    {% set _dummy = text.append("[save_variables] missing") %}
  {% endif %}
  {% if 'virtual_sdcard' not in printer %}
    {% set _dummy = text.append("[virtual_sdcard] missing") %}
  {% endif %}
  {% if text|length > 1 %}
    {action_respond_info(text|join("\n"))}
  {% endif %}

[gcode_macro _USER_VARIABLES]
# Enable verbose output to let the macro have a chat
variable_verbose: True


#######################################
# Feedrate setpoints for all the macros
#######################################

variable_homing_travel_speed: 350
variable_travel_speed: 350
variable_z_drop_speed: 30
variable_brush_clean_speed: 130

#################################################
# Homing, start_print and end_print variables
#################################################

# For the physical Z endstop pin position, please see in the other
# options bellow as it's needed only if you don't use the automatic
# z_calibration plugin (that is by the way fully optional)

# Force always a full homing and QGL during the START_PRINT macro
variable_force_homing_in_start_print: False

# Z hop before homing to avoid grinding
# the bed due to the gantry sag
variable_homing_zhop: 5

# default START_PRINT parameters
variable_print_default_bed_temp: 110
variable_print_default_extruder_temp: 240
variable_print_default_chamber_temp: 0
variable_print_default_chamber_max_heating_time: 15
variable_print_default_soak: 8
variable_print_default_material: "XXX"

# Prime line start position
variable_prime_line_xy: 2.5, 20

# Park position used when pause, end_print, etc...
variable_park_position_xy: 20, 350
variable_park_lift_z: 10

variable_park: {}
variable_filament_retract_pause: 1


# Automatically disable motors in the END_PRINT macro
variable_disable_motors_in_end_print: False

################################################
# Other hardware options used in the macros
################################################

# Brush and purge bucket available in the machine
# If this is not available in the machine, set the following
# variables to "-1, -1" for safety
variable_purge_and_brush_enabled: True
variable_brush_xyz: 105, 349, 2 # Position of the brush center for nozzle cleaning
variable_purge_bucket_xyz: 20, 350, 5 # Purge bucket position

# Recirculating carbon filter (example: Nevermove v5, etc...)
variable_filter_enabled: True
variable_filter_name: "filter"

# Machine lights and intensity for the different print phases
variable_light_enabled: True
variable_light_pin_name: "light"
variable_light_intensity_start_print: 100
variable_light_intensity_printing: 30
variable_light_intensity_end_print: 5

# If the machine is equiped by a temperature sensor in the chamber
# it will be used to measure and control the chamber heatsoak
variable_chamber_temperature_sensor_enabled: True
variable_chamber_temperature_sensor_name: "Chamber"

# If using the z_calibration plugin, the z_endstop position is extracted automaticaly
# from the plugin configuration section [z_calibration]. Nothing to do here.
variable_zcalib_plugin_enabled: True
# If the plugin is not used, then
#    - set variable_zcalib_plugin_enabled to false
#    - remove or comment the file macros > probing > z_calibration.cfg (the CALIBRATE_Z macro)
#    - Set the machine z_endstop coordinates here !!!
variable_zendstop_position: -1, -1 # Used only if variable_zcalib_plugin_enabled is set to false !!!

# SteathBurner leds installed in the machine
variable_status_leds_enabled: True
variable_status_leds_logo_led_name: "status_leds"
variable_status_leds_logo_idx: '1'
variable_status_leds_nozzle_led_name: "status_leds"
variable_status_leds_nozzle_idx: '2,3'

variable_status_leds_colors: {
        'logo': {
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': {
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }


# Do not remove the next line
gcode:
    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    {% set user_bed_y_offset = 5 %}              ; Endstop offset to bed max y
    {% set user_park_xy_delta = 25 %}  
    {% set user_park_z_max_delta = 40 %}         ; insure to do not hit cam in front
    {% set user_park_z_min = 10 %}               ; minimal z from bed
    {% set max = printer.toolhead.axis_maximum %} 
    {% set user_park_at_cancel = true %}        ; park head at CANCEL_PRINT if not paused [False/True]
    {% set bed = {'min': {'x': min.x, 'y': min.y                    , 'z': 0    },
                  'max': {'x': max.x, 'y': max.y - user_bed_y_offset, 'z': max.z}} %}
    {% set calc_center = {'x': (bed.max.x - bed.min.x) / 2,
                        'y': (bed.max.y - bed.min.y) / 2, 
                        'z': (bed.max.z - bed.min.z) / 2} %}
    {% set calc_park = {'min': {'x': bed.min.x + user_park_xy_delta,
                              'y': bed.min.y + user_park_xy_delta,
                              'z': bed.min.z + user_park_z_min},
                      'max': {'x': bed.max.x - user_park_xy_delta,
                              'y': bed.max.y - user_park_xy_delta,
                              'z': bed.max.z - user_park_z_max_delta}} %}


    {% set park_dic = {'bed'         : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_park.min.z},
                     'center'        : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_center.z},
                     'front'         : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.max.z},
                     'frontlow'      : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.min.z},
                     'rear'          : {'x': calc_park.min.x, 'y': calc_park.max.y, 'z': calc_park.max.z},
                     'probe'         : {'x': calc_park.max.x-20, 'y': calc_park.max.y-20, 'z': calc_park.min.z},
                    # 'pause'         : {'x': calc_purge.x,    'y': calc_purge.y,   'dz': user_park_pause_z_delta},
                    # 'purge'         : {'x': calc_purge.x,    'y': calc_purge.y,   'z': calc_park.min.z},
                     'park_at_cancel': user_park_at_cancel} %}
    SET_GCODE_VARIABLE MACRO=_USER_VARIABLES VARIABLE=park VALUE="{park_dic}"