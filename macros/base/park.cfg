[gcode_macro PARK]
description: Park the toolhead at the back and retract some filament if the nozzle is hot
gcode:
    {% set E = params.E|default(1.7)|float %}

    {% set POS = params.POS|default('purge')|string %}

    {% set user_bed_y_offset = 5 %}              ; Endstop offset to bed max y
    {% set user_park_xy_delta = 25 %}  
    {% set user_park_z_max_delta = 40 %}         ; insure to do not hit cam in front
    {% set user_park_z_min = 10 %}               ; minimal z from bed
    {% set user_park_at_cancel = true %}        ; park head at CANCEL_PRINT if not paused [False/True]

    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    {% set bed = {'min': {'x': min.x, 'y': min.y                    , 'z': 0    },
                  'max': {'x': max.x, 'y': max.y - user_bed_y_offset, 'z': max.z}} %}
    {% set calc_center = {'x': (bed.max.x - bed.min.x) / 2,
                          'y': (bed.max.y - bed.min.y) / 2, 
                          'z': (bed.max.z - bed.min.z) / 2} %}
    {% set calc_park = {'min': {'x': bed.min.x + user_park_xy_delta,
                                'y': bed.min.y + user_park_xy_delta,
                                'z': bed.min.z + user_park_z_min},
                        'max': {'x': bed.max.x - user_park_xy_delta,
                                'y': bed.max.y - user_park_xy_delta,
                                'z': bed.max.z - user_park_z_max_delta}} %}

    {% set Px, Py = printer["gcode_macro _USER_VARIABLES"].park_position_xy|map('float') %}

    {% set park = {'bed'           : {'x': calc_center.x,      'y': calc_center.y,      'z': calc_park.min.z},
                   'center'        : {'x': calc_center.x,      'y': calc_center.y,      'z': calc_center.z},
                   'front'         : {'x': calc_center.x,      'y': calc_park.min.y,    'z': calc_park.max.z},
                   'frontlow'      : {'x': calc_center.x,      'y': calc_park.min.y,    'z': calc_park.min.z},
                #   'rear'          : {'x': calc_park.min.x,    'y': calc_park.max.y,    'z': calc_park.max.z},
                #   'probe'         : {'x': calc_park.max.x-20, 'y': calc_park.max.y-20, 'z': calc_park.min.z},
                #  'pause'         : {'x': calc_purge.x,       'y': calc_purge.y,       'dz': user_park_pause_z_delta},
                   'purge'         : {'x': Px,       'y': Py,       'z': 10},
                   'park_at_cancel': user_park_at_cancel} %}

    {% set Px, Py = printer["gcode_macro _USER_VARIABLES"].park_position_xy|map('float') %}
    {% set park_lift_z = printer["gcode_macro _USER_VARIABLES"].park_lift_z %}

    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}

    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% set z_safe = act_z + park_lift_z %}
    {% if z_safe > max_z %}
        {% set z_safe = max_z %}
    {% endif %}

    # retract filament before move up toolhead
    {% if printer.extruder.temperature > 185 %}
        G10
    {% endif %}
    G90
    G1 Z{z_safe} F{Sz}

    G0 X{Px} Y{Py} F{St}
